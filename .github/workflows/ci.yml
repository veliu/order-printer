name: CI

on:
    push:
        branches: [ "main" ]
    pull_request:
        branches: [ "main" ]

jobs:
    validation:
        name: "Code Validation (PHP ${{ matrix.php-versions }})"
        runs-on: ubuntu-latest
        strategy:
            matrix:
                php-versions: ['8.4']

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-versions }}
                  extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, json, sqlite3
                  coverage: xdebug
                  tools: composer:v2

            - name: Get composer cache directory
              id: composer-cache
              run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

            - name: Cache composer dependencies
              uses: actions/cache@v4
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ runner.os }}-composer-

            - name: Install Dependencies
              run: composer install --prefer-dist --no-progress

            - name: Check PHP Syntax
              run: |
                  find src tests -name "*.php" -print0 | xargs -0 -n1 php -l

            - name: psalm Static Analysis
              run: vendor/bin/psalm

            - name: Run Tests
              run: |
                  vendor/bin/phpunit --coverage-text --coverage-clover=coverage.xml

            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v4
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  file: ./coverage.xml
                  flags: unittests
                  name: codecov-umbrella
                  fail_ci_if_error: true

            - name: PHP CS Fixer
              run: |
                  vendor/bin/php-cs-fixer fix --dry-run --diff

            - name: Security Check
              run: |
                  composer audit

    symfony-requirements:
        name: Symfony Requirements
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.4'
                  extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite
                  coverage: none

            - name: Check Symfony Requirements
              run: |
                  composer require symfony/requirements-checker
                  vendor/bin/requirements-checker

    database:
        name: Database Schema Validation
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.4'
                  extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite
                  coverage: none

            - name: Install Dependencies
              run: composer install --prefer-dist --no-progress

            - name: Validate Database Schema
              run: |
                  php bin/console doctrine:schema:validate --skip-sync
                  php bin/console doctrine:schema:update --force --dump-sql --complete

    security:
        name: Security Checks
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Security Check
              uses: symfonycorp/security-checker-action@v5
